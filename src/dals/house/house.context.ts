import { model, Schema } from "mongoose";
import { House } from "./house.model";

const houseSchema = new Schema<House>({
  listing_url: { type: Schema.Types.String, required: true },
  name: { type: Schema.Types.String, required: true },
  summary: { type: Schema.Types.String, required: true },
  space: { type: Schema.Types.String },
  description: { type: Schema.Types.String },
  neighborhood_overview: { type: Schema.Types.String },
  notes: { type: Schema.Types.String },
  transit: { type: Schema.Types.String },
  access: { type: Schema.Types.String },
  interaction: { type: Schema.Types.String },
  house_rules: { type: Schema.Types.String },
  property_type: { type: Schema.Types.String },
  room_type: { type: Schema.Types.String },
  bed_type: { type: Schema.Types.String },
  minimum_nights: { type: Schema.Types.String },
  maximum_nights: { type: Schema.Types.String },
  cancellation_policy: { type: Schema.Types.String },
  last_scraped: { type: Schema.Types.Array },
  calendar_last_scraped: { type: Schema.Types.Array },
  first_review: { type: Schema.Types.Array },
  last_review: { type: Schema.Types.Array },
  accommodates: { type: Schema.Types.Number },
  bedrooms: { type: Schema.Types.Number },
  beds: { type: Schema.Types.Number },
  number_of_reviews: { type: Schema.Types.Number },
  bathrooms: { type: Schema.Types.Array },
  amenities: { type: Schema.Types.Mixed },
  price: { type: Schema.Types.Array },
  weekly_price: { type: Schema.Types.Array },
  monthly_price: { type: Schema.Types.Array },
  security_deposit: { type: Schema.Types.Array },
  cleaning_fee: { type: Schema.Types.Array },
  extra_people: { type: Schema.Types.Array },
  guests_included: { type: Schema.Types.Array },
  images: { type: Schema.Types.Array },
  host: { type: Schema.Types.Array },
  address: { type: Schema.Types.Array },
  availability: { type: Schema.Types.Array },
  review_scores: { type: Schema.Types.Array },
  reviews: { type: Schema.Types.Mixed },
});

export const houseContext = model<House>("House", houseSchema);
